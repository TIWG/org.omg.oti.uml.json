/*
 * Copyright 2016 California Institute of Technology ("Caltech").
 * U.S. Government sponsorship acknowledged.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.omg.oti.json.uml.enums

import play.json.extra._
import play.api.libs.json._

import scala.Predef.String

/**
  * This is an enumerated type that identifies the type of communication action that was used to generate the Message.
  *
  * <!-- Start of user code documentation -->
  * <!-- End of user code documentation -->
  */
sealed trait UMLMessageSort {}

object UMLMessageSort {

  /**
    * The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous = false.
    *
    * <!-- Start of user code doc for asynchCall -->
    * <!-- End of user code doc for asynchCall -->
    */
  case object asynchCall extends UMLMessageSort {}

  /**
    * The message was generated by an asynchronous send action.
    *
    * <!-- Start of user code doc for asynchSignal -->
    * <!-- End of user code doc for asynchSignal -->
    */
  case object asynchSignal extends UMLMessageSort {}

  /**
    * The message designating the creation of another lifeline object.
    *
    * <!-- Start of user code doc for createMessage -->
    * <!-- End of user code doc for createMessage -->
    */
  case object createMessage extends UMLMessageSort {}

  /**
    * The message designating the termination of another lifeline.
    *
    * <!-- Start of user code doc for deleteMessage -->
    * <!-- End of user code doc for deleteMessage -->
    */
  case object deleteMessage extends UMLMessageSort {}

  /**
    * The message is a reply message to an operation call.
    *
    * <!-- Start of user code doc for reply -->
    * <!-- End of user code doc for reply -->
    */
  case object reply extends UMLMessageSort {}

  /**
    * The message was generated by a synchronous call to an operation.
    *
    * <!-- Start of user code doc for synchCall -->
    * <!-- End of user code doc for synchCall -->
    */
  case object synchCall extends UMLMessageSort {}
 
  implicit val writesUMLMessageSort
  : Writes[UMLMessageSort]
  = Variants.writes[UMLMessageSort]((__ \ "type").format[String])

  implicit val readsUMLMessageSort
  : Reads[UMLMessageSort]
  = Variants.reads[UMLMessageSort]((__ \ "type").format[String])

  implicit val formatsUMLMessageSort
  : Format[UMLMessageSort]
  = Variants.format[UMLMessageSort]((__ \ "type").format[String])
  
}
